// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gabriel_almeida.Models;

#nullable disable

namespace gabriel_almeida.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20231212175431_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("gabriel_almeida.Models.Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("codNotaDeVenda")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("gabriel_almeida.Models.Item", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("idProduto")
                        .HasColumnType("int");

                    b.Property<int>("percentual")
                        .HasColumnType("int");

                    b.Property<double>("preco")
                        .HasColumnType("double");

                    b.Property<string>("quantidade")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("gabriel_almeida.Models.Marca", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("nome")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("gabriel_almeida.Models.NotaDeVenda", b =>
                {
                    b.Property<int>("cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("data")
                        .HasColumnType("longtext");

                    b.Property<int>("idDePagamento")
                        .HasColumnType("int");

                    b.Property<int>("idDeTransportadora")
                        .HasColumnType("int");

                    b.Property<int>("idDoCliente")
                        .HasColumnType("int");

                    b.Property<int>("idDoItem")
                        .HasColumnType("int");

                    b.Property<int>("idTipoDePagamento")
                        .HasColumnType("int");

                    b.Property<bool>("tipo")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("cod");

                    b.ToTable("NotaDeVenda");
                });

            modelBuilder.Entity("gabriel_almeida.Models.Pagamento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("dataLimite")
                        .HasColumnType("date");

                    b.Property<bool>("pago")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("valor")
                        .HasColumnType("double");

                    b.HasKey("id");

                    b.ToTable("Pagamento");
                });

            modelBuilder.Entity("gabriel_almeida.Models.Produto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .HasColumnType("longtext");

                    b.Property<int>("idDaMarca")
                        .HasColumnType("int");

                    b.Property<int>("idDoItem")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .HasColumnType("longtext");

                    b.Property<double>("preco")
                        .HasColumnType("double");

                    b.Property<int>("quantidade")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("gabriel_almeida.Models.TipoDePagamento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("informacoesAdicionais")
                        .HasColumnType("longtext");

                    b.Property<string>("nomeDoCobrado")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("TipoDePagamento");

                    b.HasDiscriminator<string>("Discriminator").HasValue("TipoDePagamento");
                });

            modelBuilder.Entity("gabriel_almeida.Models.Transportadora", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("codNotaDeVenda")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Transportadora");
                });

            modelBuilder.Entity("gabriel_almeida.Models.Vendedor", b =>
                {
                    b.Property<int>("idvende")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Notavendacod")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .HasColumnType("longtext");

                    b.HasKey("idvende");

                    b.HasIndex("Notavendacod");

                    b.ToTable("Vendedor");
                });

            modelBuilder.Entity("gabriel_almeida.Models.PagamentoComCartao", b =>
                {
                    b.HasBaseType("gabriel_almeida.Models.TipoDePagamento");

                    b.Property<string>("bandeira")
                        .HasColumnType("longtext");

                    b.Property<string>("numeroDoCartao")
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("PagamentoComCartao");
                });

            modelBuilder.Entity("gabriel_almeida.Models.PagamentoComCheque", b =>
                {
                    b.HasBaseType("gabriel_almeida.Models.TipoDePagamento");

                    b.Property<int>("banco")
                        .HasColumnType("int");

                    b.Property<string>("nomeDoBanco")
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("PagamentoComCheque");
                });

            modelBuilder.Entity("gabriel_almeida.Models.Vendedor", b =>
                {
                    b.HasOne("gabriel_almeida.Models.NotaDeVenda", "NotaVenda")
                        .WithMany()
                        .HasForeignKey("Notavendacod")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotaVenda");
                });
#pragma warning restore 612, 618
        }
    }
}
